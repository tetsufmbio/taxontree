#!/usr/bin/perl -w

#	TaxOnTree Version: 1.10

#############################################################################
#                                                                           #
#   Copyright (C) 2015-2017  Tetsu Sakamoto                                 #
#                                                                           #
#   This program is free software: you can redistribute it and/or modify    #
#   it under the terms of the GNU General Public License as published by    #
#   the Free Software Foundation, either version 3 of the License, or       #
#   (at your option) any later version.                                     #
#                                                                           #
#   This program is distributed in the hope that it will be useful,         #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of          #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           #
#   GNU General Public License for more details.                            #
#                                                                           #
#   You should have received a copy of the GNU General Public License       #
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.   #
#                                                                           #
#############################################################################

#############################################################################
#                                                                           #
#   This program uses NCBI eutilities service to retrieve biological        #
#   data. NCBI's Disclaimer and Copyright notice are available at           #
#   <www.ncbi.nlm.nih.gov/About/disclaimer.html>.                           #
#                                                                           #
#############################################################################

#############################################################################
#                                                                           #
#   Author contact: tetsufmbio@gmail.com or miguel@icb.ufmg.br              #
#                                                                           #
#############################################################################

#############################################################################
#                                                                           #
#   Major update:                                                           #
#   - TaxOnTree is using now the Taxallnomy database                        #
#   	(biodados.icb.ufmg.br/taxallnomy);                                  #
#   - NCBI accession is now the primary identifier;                         #
#   - TaxOnTree accept a table containing other info to embeded in the tree;#
#   - Taxonomic filter added;                                               #
#   - TaxOnTree deals with redundant leaf name;                             #
#   - TaxOnTree deals with taxonomy updates;                                #
#                                                                           #
#############################################################################

print "
	TaxOnTree  Copyright (C) 2015-2017  Tetsu Sakamoto
	This program comes with ABSOLUTELY NO WARRANTY.
	This is free software, and you are welcome to redistribute it under
	certain conditions. See GNU general public license v.3 for details.\n\n";
	
use lib $ENV{'HOME'}."/.taxontree/libs/lib/perl5";
use taxontree;
use Getopt::Long;
use Pod::Usage;
use Data::Dumper;
use strict;

my $TaxOnTreeVersion = "TaxOnTree v.1.10";

$| = (@ARGV > 0); 

# setup my defaults
my %inputs;
$inputs{"querySeqFile"} = undef;
$inputs{"queryList"} = undef;
$inputs{"querySingleID"} = undef;
$inputs{"queryBlastFile"} = undef;
$inputs{"treeFile"} = undef;
$inputs{"queryAlignmentFile"} = undef;
$inputs{"queryMFastaFile"} = undef;
$inputs{"queryID"} = undef;
$inputs{"treeTable"} = undef;
$inputs{"otherTable"} = undef;
$inputs{"treeProg"} = "FastTree";
$inputs{"trimProg"} = "trimal";
$inputs{"treeFormat"}	= "newick";
$inputs{"queryTax"} = undef;
$inputs{"queryKO"} = "NULL";
$inputs{"queryUEKO"} = "NULL";
$inputs{"queryGeneName"} = "NULL";
$inputs{"queryGene"} = "NULL";
$inputs{"delimiter"} = '|';
$inputs{"position"} = 1;
$inputs{"posTax"} = undef;
$inputs{"txidMap"} = undef;
$inputs{"pid"} = undef;
$inputs{"showIsoform"} = undef;
$inputs{"noTrimal"} = undef;
$inputs{"database"} 	= "refseq_protein";
$inputs{"blastProgram"} 	= "blastp";
$inputs{"aligner"} 	= "muscle";
$inputs{"leafNameFormat"} 	= "lcaN;id;geneName;species;rankcode(family,order,class)";
$inputs{"taxRepFormat"} 	= "1..12";
$inputs{"lcaLimit"} 	= 0;
$inputs{"tpident_cut"} = 50;
$inputs{"maxTarget"} = undef;
$inputs{"maxTargetBlast"} = undef;
$inputs{"taxSimple"} 	= 0;
$inputs{"treeRoot"}	= 1;
$inputs{"printLeaves"} = undef;
$inputs{"evalue"}		= 10e-5;
$inputs{"numThreads"}	= 1;
$inputs{"localMySQL"} = undef;
$inputs{"webBlastDelimiter"} = quotemeta('|');
$inputs{"webBlastPosition"} = 3;
$inputs{"taxFilter"} = 0;
$inputs{"taxFilterCat"} = "species";
$inputs{"restrictTax"} = undef;
$inputs{"forceNoTxid"} = undef;
$inputs{"forceNoInternet"} = undef;
my $help		= 0;
my $man			= 0;
my $version = undef;

GetOptions(
    'seqFile=s'=> \$inputs{"querySeqFile"},
    'listFile=s'    => \$inputs{"queryList"},
    'singleID=s'    => \$inputs{"querySingleID"},
    'blastFile=s'    => \$inputs{"queryBlastFile"},
    'alignFile=s'    => \$inputs{"queryAlignmentFile"},
    'mfastaFile=s'    => \$inputs{"queryMFastaFile"},
    'queryID=s'    => \$inputs{"queryID"},
    'treeFile=s'    => \$inputs{"treeFile"},
    'treeTable=s'    => \$inputs{"treeTable"},
    'otherTable=s'    => \$inputs{"otherTable"},
    'queryTax=s'    => \$inputs{"queryTax"},
    'txidMap=s'    => \$inputs{"txidMap"},
    'db=s' 			=> \$inputs{"database"},
	'blastProg=s' 	=> \$inputs{"blastProgram"},
	'aligner=s' 	=> \$inputs{"aligner"},
	'trimming=s' 	=> \$inputs{"trimProg"},
	'treeProg=s' 	=> \$inputs{"treeProg"},
	'maxTarget=i'	=> \$inputs{"maxTarget"},
	'maxTargetBlast=i'	=> \$inputs{"maxTargetBlast"},
	'threshold=i'	=> \$inputs{"tpident_cut"},
	'out=s'			=> \$inputs{"pid"},
	'leafFmt=s'			=> \$inputs{"leafNameFormat"},
	'taxRepFmt=s'			=> \$inputs{"taxRepFormat"},
	'treeFormat=s'			=> \$inputs{"treeFormat"},
	'showIsoform!'			=> \$inputs{"showIsoform"},
	'taxSimple!' 	=> \$inputs{"taxSimple"},
	'treeRoot=i' 		=> \$inputs{"treeRoot"},
	'lcaLimit=i' 		=> \$inputs{"lcaLimit"},
	'printLeaves!' 		=> \$inputs{"printLeaves"},
    'help!'     	=> \$help,
	'version!'		=> \$version,
	'man!'			=> \$man,
	'evalue=f'		=> \$inputs{"evalue"},
	'delimiter=s'		=> \$inputs{"delimiter"},
	'position=i'		=> \$inputs{"position"},
	'posTax=i'		=> \$inputs{"posTax"},
	'numThreads=i'		=> \$inputs{"numThreads"},
	'mysql!'		=> \$inputs{"localMySQL"},
	'taxFilter=i'		=> \$inputs{"taxFilter"},
	'taxFilterCat=s'		=> \$inputs{"taxFilterCat"},
	'restrictTax=s'		=> \$inputs{"restrictTax"},
	'forceNoTxid!'		=> \$inputs{"forceNoTxid"},
	'forceNoInternet!'		=> \$inputs{"forceNoInternet"},
) or pod2usage(-verbose => 99, 
            -sections => [ qw(NAME SYNOPSIS) ] );

pod2usage(0) if $man;
pod2usage(2) if $help;
if ($version){
	print $TaxOnTreeVersion."\n";
	exit;
}
# Check input;
my @inputs = qw(querySeqFile queryList querySingleID queryBlastFile treeFile queryMFastaFile queryAlignmentFile);
my $inputType;
my $input;
my @inputFiles;

foreach my $inputType2(@inputs){
	if ($inputs{$inputType2}){
		if (!$input){
			$inputType = $inputType2;
			$input = $inputs{$inputType2};
		} else {
			print "ERROR: More than one input was provided. Please, provide only one of them.\n";
			pod2usage(2);
		}
	}
}

if (!$input){
	print "ERROR: No input was provided.\n";
	pod2usage(2);
} else {
	if (!($inputs{"pid"})){
		if ($inputType ne "querySingleID"){
			my $pid = $input;
			$pid = substr($pid, rindex($pid, "\/") + 1) if ($pid =~ m/\//);
			$pid = substr($pid, 0, rindex($pid, ".")) if ($pid =~ m/\./);
			$inputs{"pid"} = $pid;
		} else {
			$inputs{"pid"} = $input;
		}
	}
}

inputs(\%inputs, $TaxOnTreeVersion);
check();
main($input, $inputType);